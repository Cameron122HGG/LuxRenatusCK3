
#To keep it a bit clean, interaction to open and close the menu 
#For compatibility and as it are religious interactions it will be added in the religion category
open_convertion_to_polytheism_menu = {
	category = interaction_category_religion
	common_interaction = yes

	auto_accept = yes
	ignores_pending_interaction_block = yes
	
	is_shown = {
		scope:actor = {
			is_ai = no
			has_game_rule = pr_convertion_to_polytheism_menu_on
			NOT = {
				has_character_flag = open_demand_convertion_to_polytheism_menu
				OR = { 
					has_religion = religion:christianity_religion
					has_religion = religion:islam_religion
				}
			}
		}
	}
	
	on_send = {
		scope:actor = {
			add_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}
}

close_convertion_to_polytheism_menu = {
	category = interaction_category_religion
	common_interaction = yes
	has_game_rule = pr_convertion_to_polytheism_menu_on
	auto_accept = yes
	ignores_pending_interaction_block = yes
	
	is_shown = {
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}
	
	on_send = {
		scope:actor = {
			remove_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}
}

#demand to change to ancient religion
#Gaelic 
demand_conversion_gaelic_vassal_ruler_interaction = {
	category = interaction_category_religion
	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_gaelic_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}
#Gaelic Ask courtier like spouse 
ask_for_conversion_gaelic_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_gaelic_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_gaelic_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}


#Brythonic
demand_conversion_brythonic_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_brythonic_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Brythonic ask courtiers like spouse to convert
ask_for_conversion_brythonic_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_brythonic_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_brythonic_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
#Gaulish
demand_conversion_gaulish_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_gaulish_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Gaulish ask courtiers like spouse to convert
ask_for_conversion_gaulish_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_gaulish_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_gaulish_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
#Cultus Deorum
demand_conversion_cultus_deorum_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_cultus_deorum_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Cultus Deorum ask courtiers like spouse to convert
ask_for_conversion_cultus_deorum_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_cultus_deorum_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_cultus_deorum_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Greco Roman
demand_conversion_greco_roman_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_greco_roman_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#GrecoRoman ask courtiers like spouse to convert
ask_for_conversion_greco_roman_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_greco_roman_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_greco_roman_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
#Hellenism 
demand_conversion_hellenism_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_hellenism_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Hellenism ask courtiers like spouse to convert
ask_for_conversion_hellenism_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_hellenism_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_hellenism_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Kemetic
demand_conversion_kemetic_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_kemetic_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#kemetic ask courtiers like spouse to convert
ask_for_conversion_kemetic_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_kemetic_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_kemetic_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Atenism
demand_conversion_atenism_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_atenism_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Atenism ask courtiers like spouse to convert
ask_for_conversion_atenism_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_atenism_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_atenism_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Dacian
demand_conversion_dacian_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_dacian_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Dacian ask courtiers like spouse to convert
ask_for_conversion_dacian_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_dacian_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_dacian_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Zalmoxism
demand_conversion_zalmoxism_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_zalmoxism_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Zalmoxism ask courtiers like spouse to convert
ask_for_conversion_zalmoxism_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_zalmoxism_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_zalmoxism_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Mesopotamian
#babylonian
demand_conversion_babylonian_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_babylonian_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Assyrian
demand_conversion_assyrian_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_assyrian_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}


#Sumerian
demand_conversion_sumerian_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_sumerian_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Mesopotamian ask courtiers like spouse to convert
#Babylonian
ask_for_conversion_babylonian_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_babylonian_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_babylonian_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
#Assyrian
ask_for_conversion_assyrian_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_assyrian_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_assyrian_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Sumerian
ask_for_conversion_sumerian_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_sumerian_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_sumerian_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
#Canaanite
#Puic
demand_conversion_punic_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_punic_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#punic ask courtiers like spouse to convert
ask_for_conversion_punic_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_punic_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_punic_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
#semitic
demand_conversion_semitic_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_semitic_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#semitic ask courtiers like spouse to convert
ask_for_conversion_semitic_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_semitic_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_semitic_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
demand_conversion_hittite_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_hittite_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#hittite ask courtiers like spouse to convert
ask_for_conversion_hittite_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_hittite_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_hittite_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
#Georgian
demand_conversion_georgian_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_georgian_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#punic ask courtiers like spouse to convert
ask_for_conversion_georgian_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_georgian_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_georgian_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Armenian
demand_conversion_armenian_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_armenian_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Armenian ask courtiers like spouse to convert
ask_for_conversion_armenian_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_armenian_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_armenian_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

 #Etruscan
 demand_conversion_etruscan_vassal_ruler_interaction = {
 	category = interaction_category_religion

 	ai_maybe = yes
 	ai_min_reply_days = 4
 	ai_max_reply_days = 9
 	can_send_despite_rejection = yes
 	ai_accept_negotiation = yes
 	popup_on_receive = yes

 	ai_targets = {
 		ai_recipients = vassals
 	}
 	ai_target_quick_trigger = {
 		adult = yes
 	}
 	ai_frequency = 12

 	desc = {
 		desc = ask_for_conversion_interaction_desc
 		desc = line_break
 		triggered_desc = {
 			trigger = {
 				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
 			}
 			desc = might_ask_for_something_in_return_warning
 		}
 		triggered_desc = {
 			trigger = {
 				scope:actor = {
 					refusing_conversion_is_crime_trigger = {
 						CHARACTER = scope:recipient
 					}
 				}
 			}
 			desc = demand_conversion_vassal_ruler_is_crime
 		}
 	}

 	on_decline_summary = stop_attacker_vassal_war_decline_summary

 	is_shown = {
		
 		scope:recipient = {
			
 			#target_is_liege_or_above = scope:actor
 			NOT = { faith = scope:actor.faith }
 			is_ai = yes
 			is_ruler = yes
 		}
 		scope:actor = {
 			is_ai = no
 			has_character_flag = open_demand_convertion_to_polytheism_menu
 		}
 	}

 	cooldown_against_recipient = { years = 15 }

 	is_valid_showing_failures_only = {
 		valid_demand_conversion_conditions_trigger = yes
 	}

 	auto_accept = {
 		custom_description = {
 			text = "spending_hook"
 			subject = scope:actor
 			object = scope:recipient
 			scope:hook = yes
 			scope:actor = { has_strong_hook = scope:recipient }
 		}
 	}

 	on_send = {
 	}


 	on_accept = {
 		scope:actor = {
 			trigger_event = religious_interaction.2002
 		}
 		demand_conversion_etruscan_vassal_ruler_interaction_effect  = yes
 	}

 	on_decline = {
 		scope:recipient = {
 			hidden_effect = {
 				random_list = {
 					80 = { # Conditional acceptance
						modifier = {
 							factor = 0 # Heresiarchs never agree to convert
 							scope:recipient = {
 								has_trait = heresiarch
 							}
 						}
 						ai_value_modifier = {
 							ai_greed = 0.5
 						}
 						random_list = {
 							50 = { #They ask for gold
 								modifier = {
 									add = 50 # More likely to ask for gold if they're poor
 									scope:recipient.short_term_gold < medium_gold_value
 								}
 								modifier = {
 									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
 										value = 50
 										if = {
 											# Especially true if they're in debt!
 											limit = { gold < 0 }
 											add = 150
 										}
 									}									
 									is_at_war = yes
 									any_character_war = {
 										is_war_leader = scope:recipient
 									}
 								}
 								scope:actor = {
 									trigger_event = {
 										id = religious_interaction.2011
 									}
 								}
 							}
 							500 = { #They ask for a favor
 								trigger = {
 									exists = scope:recipient.capital_county
 									NOT = { has_hook = scope:actor }
 								}
 								# Direct feudal vassals appreciate favors more (they can improve their contract).
 								modifier = {
 									add = {
 										value = 50
 										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
 										if = {
 											limit = { is_powerful_vassal_of = scope:actor }
 											add = 100
 										}
 									}
 									this.liege = scope:actor
 									has_government = feudal_government
 								}
 								scope:actor = {
 									trigger_event = {
 										id = religious_interaction.2012
 									}
 								}
 							}
 						}

 					}
 					20 = { # Full refuse
 						modifier = {
 							add = 20
 							scope:recipient.demand_conversion_likelihood_calculation < 40
 						}
 						modifier = {
 							add = 20
 							scope:recipient.demand_conversion_likelihood_calculation < 20
 						}
 						modifier = {
 							add = 50
 							scope:recipient.demand_conversion_likelihood_calculation < 0
 						}
 						scope:actor = {
 							trigger_event = {
 								id = religious_interaction.2003
 							}
 						}
 					}
 				}
 			}
 			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
 			show_as_tooltip = {
 				#Negative opinions
 				add_opinion = {
 					modifier = demanded_my_conversion_opinion
 					target = scope:actor
 					opinion = -10
 				}
 				scope:actor = {
 					if = {
 						limit = {
 							refusing_conversion_is_crime_trigger = {
 								CHARACTER = scope:recipient
 							}
 						}
 						custom_tooltip = action_can_lawfully_imprison_label
 					}
 				}
 			}
 		}
 	}
	
 	ai_potential = {
 		is_adult = yes
 	}
	
 	# Use hook
 	send_option = {
 		is_valid = {
 			scope:actor = {
 				has_usable_hook = scope:recipient
 			}
 			NOT = {
 				scope:recipient = { is_imprisoned_by = scope:actor }
 			}
 		}
 		flag = hook
 		localization = SCHEME_HOOK
 	}
 	should_use_extra_icon = {
 		scope:actor = { has_usable_hook = scope:recipient }
 	}
 	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

 	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
 			scope:hook = yes
 			add = 1
 		}
		
 		modifier = {
 			factor = 0
 			scope:recipient.demand_conversion_likelihood_calculation < 10
 			NOT = {
 				scope:actor = {
 					refusing_conversion_is_crime_trigger = {
 						CHARACTER = scope:recipient
 					}
 				}
 			}
 		}
		
 		modifier = {
 			factor = 0
 			scope:recipient.demand_conversion_likelihood_calculation < 70
 			scope:actor = {
 				gold < demand_conversion_bribe_size
 			}
 		}

 		modifier = {
 			factor = 0
 			scope:recipient.demand_conversion_likelihood_calculation < 90
 			scope:actor = {
 				culture = {
 					has_cultural_parameter = less_likely_to_force_conversion
 				}
 			}
 		}

 		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
 			factor = 0
 			scope:actor = {
 				ai_zeal < 100
 				faith = {
 					faith_hostility_level = {
 						target = scope:recipient.faith
 						value <= faith_fully_accepted_level
 					}
 				}
 			}
 			NOT = { # If the subject has one of your holy sites, always try to convert
 				scope:recipient = {
 					any_sub_realm_county = {
 						any_county_province = {
 							barony = {
 								is_holy_site_of = scope:actor.faith
 							}
 						}
 					}
 				}
 			}
 			NOT = {
 				scope:recipient = {
 					is_close_family_of = scope:actor
 				}
 			}
 		}

 		modifier = { # Astray faiths require specific circumstances to demand conversion of
 			factor = 0
 			scope:actor = {
 				has_tolerant_faith_or_culture_trigger = yes
 				ai_zeal < 50
 				faith = {
 					faith_hostility_level = {
 						target = scope:recipient.faith
 						value <= faith_astray_level
 					}
 				}
 			}
 			NOT = { # If the subject has one of your holy sites, always try to convert
 				scope:recipient = {
 					any_sub_realm_county = {
						any_county_province = {
 							barony = {
 								is_holy_site_of = scope:actor.faith
 							}
 						}
 					}
 				}
 			}
 			NOT = {
 				scope:recipient = {
 					is_close_family_of = scope:actor
 				}
 			}
 		}

 		modifier = { # Astray faiths require specific circumstances to demand conversion of
 			factor = 0
 			scope:actor = {
 				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
 				ai_zeal < -10
 				faith = {
 					faith_hostility_level = {
 						target = scope:recipient.faith
 						value <= faith_astray_level
 					}
 				}
 			}
 			NOT = { # If the subject has one of your holy sites, always try to convert
 				scope:recipient = {
 					any_sub_realm_county = {
 						any_county_province = {
 							barony = {
 								is_holy_site_of = scope:actor.faith
 							}
 						}
 					}
 				}
 			}
 			NOT = {
 				scope:recipient = {
 					is_close_family_of = scope:actor
 				}
 			}
 		}

 		modifier = { # Astray faiths require specific circumstances to demand conversion of
 			factor = 0
 			scope:actor = {
 				NOR = {
 					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
 					has_tolerant_faith_or_culture_trigger = yes
 				}
 				ai_zeal < 0
 				faith = {
 					faith_hostility_level = {
 						target = scope:recipient.faith
 						value <= faith_astray_level
 					}
 				}
 			}
 			NOT = { # If the subject has one of your holy sites, always try to convert
 				scope:recipient = {
 					any_sub_realm_county = {
 						any_county_province = {
 							barony = {
 								is_holy_site_of = scope:actor.faith
 							}
 						}
 					}
 				}
 			}
 		}
 	}
 	ai_accept = {
 		base = 0
 		religion_demand_conversion_default_modifier = yes
 		modifier = {
 			desc = might_ask_for_something_in_return_warning_line_break
 			add = 0
 		}
 	}
 }

#Etruscan ask courtiers like spouse to convert
 ask_for_conversion_etruscan_courtier_interaction = {
 	category = interaction_category_religion

 	special_interaction = request_conversion_interaction
	
 	desc = {
 		desc = ask_for_conversion_interaction_desc
 		triggered_desc = {
 			trigger = {
 				scope:actor = {
 					refusing_conversion_is_crime_trigger = {
 						CHARACTER = scope:recipient
					}
 				}
 				scope:recipient = {
 					target_is_liege_or_above = scope:actor
 				}
 			}
 			desc = demand_conversion_vassal_ruler_is_crime
 		}
 	}
	
 	ai_targets = {
 		ai_recipients = courtiers
 		chance = 0.25
 	}
 	ai_target_quick_trigger = {
 		adult = yes
 	}
 	ai_frequency = 12
	
 	is_shown = {
 		NOT = { scope:actor.faith = scope:recipient.faith }
 		scope:recipient = { is_courtier_of = scope:actor }
 		scope:recipient = { is_ruler = no }
 		scope:recipient = { is_imprisoned = no }
 		scope:actor = {
 			is_ai = no
 			has_character_flag = open_demand_convertion_to_polytheism_menu
 		}
 	}

 	is_valid_showing_failures_only = {
 		valid_demand_conversion_conditions_trigger = yes
 	}

 	ai_accept = {
 		base = 0
 		religion_demand_conversion_default_modifier = yes
 	}
	
 	auto_accept = {
 		custom_description = {
 			text = "spending_hook"
 			subject = scope:actor
 			object = scope:recipient
 			scope:hook = yes
 			scope:actor = { has_strong_hook = scope:recipient }
 		}
 	}
	
 	ai_min_reply_days = 1
 	ai_max_reply_days = 5
	
 	on_accept = {
 		demand_etruscan_conversion_interaction_effect = yes
 		hidden_effect = {
 			scope:actor = {
 				send_interface_message = {	
 					title = ask_for_conversion_courtier_interaction.tt
 					left_icon = scope:recipient
 					scope:recipient = {
 						show_as_tooltip = { demand_etruscan_conversion_interaction_effect = yes }
 					}
 				}
 			}
 		}
 		if = {
 			limit = { scope:hook = yes }
 			scope:actor = {
 				if = {
 					limit = {
 						has_usable_hook = scope:recipient
 					}
 					use_hook = scope:recipient
 				}
 			}
 			scope:recipient = {
 				trigger_event = char_interaction.0180
 			}
 		}
 		if = {
 			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
 			scope:recipient = { release_from_prison = yes }
 			scope:recipient = {
 				trigger_event = char_interaction.0180
 			}
 		}
 	}

 	on_decline = {
 		send_interface_toast = {
 			title = ask_for_conversion_decline_notification
 			left_icon = scope:recipient
 		}
 	}

 	# Use hook
 	send_option = {
 		is_valid = {
 			scope:actor = {
 				has_usable_hook = scope:recipient
 			}
 			NOT = {
 				scope:recipient = { is_imprisoned_by = scope:actor }
 			}
 		}
 		flag = hook
 		localization = SCHEME_HOOK
 	}
 	should_use_extra_icon = {
 		scope:actor = { has_usable_hook = scope:recipient }
 	}
 	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
 	send_options_exclusive = no

	
 	ai_potential = {
 		is_adult = yes
 	}
	
 	ai_will_do = {
 		base = 100
		
 		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
 			scope:hook = yes
 			add = -1
 		}
		
 		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
 			scope:recipient = {
 				faith.religion = religion:judaism_religion
 				culture = {
 					has_cultural_tradition = tradition_diasporic
 				}
 			}
 			factor = 0
 		}

 		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
 			factor = 0
			scope:actor = {
 				ai_zeal < 100
 				faith = {
 					faith_hostility_level = {
 						target = scope:recipient.faith
 						value <= faith_fully_accepted_level
 					}
 				}
 			}
 			NOT = {
 				scope:recipient = {
 					is_close_family_of = scope:actor
 				}
 			}
 		}

 		modifier = { # Astray faiths require specific circumstances to demand conversion of
 			factor = 0
 			scope:actor = {
 				has_tolerant_faith_or_culture_trigger = yes
 				ai_zeal < 50
 				faith = {
 					faith_hostility_level = {
 						target = scope:recipient.faith
 						value <= faith_astray_level
 					}
 				}
 			}
 			NOT = {
 				scope:recipient = {
 					is_close_family_of = scope:actor
 				}
 			}
 		}

 		modifier = { # Astray faiths require specific circumstances to demand conversion of
 			factor = 0
 			scope:actor = {
 				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
 				ai_zeal < -10
 				faith = {
 					faith_hostility_level = {
 						target = scope:recipient.faith
 						value <= faith_astray_level
 					}
 				}
 			}
 			NOT = {
 				scope:recipient = {
 					is_close_family_of = scope:actor
 				}
 			}
 		}

 		modifier = { # Astray faiths require specific circumstances to demand conversion of
 			factor = 0
 			scope:actor = {
 				NOR = {
 					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
 					has_tolerant_faith_or_culture_trigger = yes
 				}
 				ai_zeal < 0
 				faith = {
 					faith_hostility_level = {
 						target = scope:recipient.faith
 						value <= faith_astray_level
 					}
 				}
 			}
 			NOT = {
 				scope:recipient = {
 					is_close_family_of = scope:actor
 				}
 			}
 		}
 	}
 }

#Germanic
#Norse
demand_conversion_norse_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_norse_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Norse ask courtiers like spouse to convert
ask_for_conversion_norse_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_norse_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_norse_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}
#Anglo Saxon
demand_conversion_anglo_saxon_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_anglo_saxon_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Anglo Saxon ask courtiers like spouse to convert
ask_for_conversion_anglo_saxon_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_anglo_saxon_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_anglo_saxon_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#German Polytheism
demand_conversion_german_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_german_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#German ask courtiers like spouse to convert
ask_for_conversion_german_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_german_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_german_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}

#Scythian
demand_conversion_scythian_vassal_ruler_interaction = {
	category = interaction_category_religion

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	can_send_despite_rejection = yes
	ai_accept_negotiation = yes
	popup_on_receive = yes

	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	desc = {
		desc = ask_for_conversion_interaction_desc
		desc = line_break
		triggered_desc = {
			trigger = {
				NOT = { scope:recipient = { is_imprisoned_by = scope:actor } }
			}
			desc = might_ask_for_something_in_return_warning
		}
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}

	on_decline_summary = stop_attacker_vassal_war_decline_summary

	is_shown = {
		
		scope:recipient = {
			
			#target_is_liege_or_above = scope:actor
			NOT = { faith = scope:actor.faith }
			is_ai = yes
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	cooldown_against_recipient = { years = 15 }

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	on_send = {
	}


	on_accept = {
		scope:actor = {
			trigger_event = religious_interaction.2002
		}
		demand_conversion_scythian_vassal_ruler_interaction_effect  = yes
	}

	on_decline = {
		scope:recipient = {
			hidden_effect = {
				random_list = {
					80 = { # Conditional acceptance
						modifier = {
							factor = 0 # Heresiarchs never agree to convert
							scope:recipient = {
								has_trait = heresiarch
							}
						}
						ai_value_modifier = {
							ai_greed = 0.5
						}
						random_list = {
							50 = { #They ask for gold
								modifier = {
									add = 50 # More likely to ask for gold if they're poor
									scope:recipient.short_term_gold < medium_gold_value
								}
								modifier = {
									add = { # Much more likely to ask for gold involved in one of their own wars (they want to win).
										value = 50
										if = {
											# Especially true if they're in debt!
											limit = { gold < 0 }
											add = 150
										}
									}									
									is_at_war = yes
									any_character_war = {
										is_war_leader = scope:recipient
									}
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2011
									}
								}
							}
							500 = { #They ask for a favor
								trigger = {
									exists = scope:recipient.capital_county
									NOT = { has_hook = scope:actor }
								}
								# Direct feudal vassals appreciate favors more (they can improve their contract).
								modifier = {
									add = {
										value = 50
										# This goes double for your Powerful Vassals. A better contract is likely to be much more important than a short-term payout.
										if = {
											limit = { is_powerful_vassal_of = scope:actor }
											add = 100
										}
									}
									this.liege = scope:actor
									has_government = feudal_government
								}
								scope:actor = {
									trigger_event = {
										id = religious_interaction.2012
									}
								}
							}
						}

					}
					20 = { # Full refuse
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 40
						}
						modifier = {
							add = 20
							scope:recipient.demand_conversion_likelihood_calculation < 20
						}
						modifier = {
							add = 50
							scope:recipient.demand_conversion_likelihood_calculation < 0
						}
						scope:actor = {
							trigger_event = {
								id = religious_interaction.2003
							}
						}
					}
				}
			}
			custom_tooltip = demand_conversion_vassal_ruler_does_not_convert
			show_as_tooltip = {
				#Negative opinions
				add_opinion = {
					modifier = demanded_my_conversion_opinion
					target = scope:actor
					opinion = -10
				}
				scope:actor = {
					if = {
						limit = {
							refusing_conversion_is_crime_trigger = {
								CHARACTER = scope:recipient
							}
						}
						custom_tooltip = action_can_lawfully_imprison_label
					}
				}
			}
		}
	}
	
	ai_potential = {
		is_adult = yes
	}
	
	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	ai_will_do = {
		base = 100
		
		modifier = { # Make sure the AI uses hooks for this as it's % based
			scope:hook = yes
			add = 1
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 10
			NOT = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
			}
		}
		
		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 70
			scope:actor = {
				gold < demand_conversion_bribe_size
			}
		}

		modifier = {
			factor = 0
			scope:recipient.demand_conversion_likelihood_calculation < 90
			scope:actor = {
				culture = {
					has_cultural_parameter = less_likely_to_force_conversion
				}
			}
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = { # If the subject has one of your holy sites, always try to convert
				scope:recipient = {
					any_sub_realm_county = {
						any_county_province = {
							barony = {
								is_holy_site_of = scope:actor.faith
							}
						}
					}
				}
			}
		}
	}
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes

		modifier = {
			desc = might_ask_for_something_in_return_warning_line_break
			add = 0
		}
	}
}

#Scythian ask courtiers like spouse to convert
ask_for_conversion_scythian_courtier_interaction = {
	category = interaction_category_religion

	special_interaction = request_conversion_interaction
	
	desc = {
		desc = ask_for_conversion_interaction_desc
		triggered_desc = {
			trigger = {
				scope:actor = {
					refusing_conversion_is_crime_trigger = {
						CHARACTER = scope:recipient
					}
				}
				scope:recipient = {
					target_is_liege_or_above = scope:actor
				}
			}
			desc = demand_conversion_vassal_ruler_is_crime
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12
	
	is_shown = {
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:recipient = { is_courtier_of = scope:actor }
		scope:recipient = { is_ruler = no }
		scope:recipient = { is_imprisoned = no }
		scope:actor = {
			is_ai = no
			has_character_flag = open_demand_convertion_to_polytheism_menu
		}
	}

	is_valid_showing_failures_only = {
		valid_demand_conversion_conditions_trigger = yes
	}
	
	ai_accept = {
		base = 0
		religion_demand_conversion_default_modifier = yes
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		demand_scythian_conversion_interaction_effect = yes
		hidden_effect = {
			scope:actor = {
				send_interface_message = {	
					title = ask_for_conversion_courtier_interaction.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { demand_scythian_conversion_interaction_effect = yes }
					}
				}
			}
		}
		if = {
			limit = { scope:hook = yes }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
		if = {
			limit = { scope:recipient = { is_imprisoned_by = scope:actor } }
			scope:recipient = { release_from_prison = yes }
			scope:recipient = {
				trigger_event = char_interaction.0180
			}
		}
	}

	on_decline = {
		send_interface_toast = {
			title = ask_for_conversion_decline_notification
			left_icon = scope:recipient
		}
	}

	# Use hook
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
			NOT = {
				scope:recipient = { is_imprisoned_by = scope:actor }
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_options_exclusive = no

	
	ai_potential = {
		is_adult = yes
	}
	
	ai_will_do = {
		base = 100
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}
		
		modifier = { # The AI doesn't really want to convert Diasporic culture courtiers
			scope:recipient = {
				faith.religion = religion:judaism_religion
				culture = {
					has_cultural_tradition = tradition_diasporic
				}
			}
			factor = 0
		}

		modifier = { # Do not convert Righteous faith subjects, unless disturbingly zealous
			factor = 0
			scope:actor = {
				ai_zeal < 100
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_fully_accepted_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				has_tolerant_faith_or_culture_trigger = yes
				ai_zeal < 50
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				faith = { has_doctrine = doctrine_pluralism_fundamentalist }
				ai_zeal < -10
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}

		modifier = { # Astray faiths require specific circumstances to demand conversion of
			factor = 0
			scope:actor = {
				NOR = {
					faith = { has_doctrine = doctrine_pluralism_fundamentalist }
					has_tolerant_faith_or_culture_trigger = yes
				}
				ai_zeal < 0
				faith = {
					faith_hostility_level = {
						target = scope:recipient.faith
						value <= faith_astray_level
					}
				}
			}
			NOT = {
				scope:recipient = {
					is_close_family_of = scope:actor
				}
			}
		}
	}
}